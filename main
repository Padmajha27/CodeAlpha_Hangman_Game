import random

#  Art for Hangman visuals
HANGMAN_PICS = [
    '''
      +---+
          |
          |
          |
         ===
    ''',
    '''
      +---+
      O   |
          |
          |
         ===
    ''',
    '''
      +---+
      O   |
      |   |
          |
         ===
    ''',
    '''
      +---+
      O   |
     /|   |
          |
         ===
    ''',
    '''
      +---+
      O   |
     /|\\  |
          |
         ===
    ''',
    '''
      +---+
      O   |
     /|\\  |
     /    |
         ===
    ''',
    '''
      +---+
      O   |
     /|\\  |
     / \\  |
         ===
    ''',
]

# Function to choose a word from a text file
def choose_word():
    try:
        with open("words.txt", "r") as file:
            words = file.read().splitlines()
        return random.choice(words)
    except FileNotFoundError:
        print("The file 'words.txt' was not found.")
        exit()

# Display the word with guessed letters and blanks for unguessed letters
def display_progress(word, guessed_letters):
    display = [letter if letter in guessed_letters else "_" for letter in word]
    return " ".join(display)

# Main Hangman function
def hangman():
    word = choose_word()
    guessed_letters = set()
    incorrect_guesses = 0
    max_attempts = len(HANGMAN_PICS) - 1  # Based on visual stages

    print("Welcome to Hangman!")
    print("Try to guess the word one letter at a time.\n")

    while incorrect_guesses < max_attempts:
        print(HANGMAN_PICS[incorrect_guesses])
        print("\nWord:", display_progress(word, guessed_letters))
        print(f"Incorrect guesses left: {max_attempts - incorrect_guesses}")
        
        # Get the player's guess
        guess = input("Guess a letter: ").lower()
        
        # Check for valid input
        if len(guess) != 1 or not guess.isalpha():
            print("Please enter a single letter.")
            continue
        
        # Check if the letter has already been guessed
        if guess in guessed_letters:
            print("You already guessed that letter.")
            continue
        
        # Add the guess to the set of guessed letters
        guessed_letters.add(guess)
        
        # Check if the guessed letter is in the word
        if guess in word:
            print(f"Good job! '{guess}' is in the word.")
            # Check if all letters have been guessed
            if all(letter in guessed_letters for letter in word):
                print("\nCongratulations! You've guessed the word:", word)
                break
        else:
            # If guess is incorrect, increment incorrect guess count
            incorrect_guesses += 1
            print(f"Sorry, '{guess}' is not in the word.")
        
    # End of game: check if player lost
    if incorrect_guesses == max_attempts:
        print(HANGMAN_PICS[incorrect_guesses])
        print("\nYou've run out of guesses. The word was:", word)
    print("Thanks for playing!")

# Main game loop with replay option
while True:
    hangman()
    play_again = input("Would you like to play again? (yes/no): ").lower()
    if play_again != "yes":
        print("Goodbye!")
        break

        
